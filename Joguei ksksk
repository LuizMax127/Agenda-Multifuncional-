<!DOCTYPE html><html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Jogo Plataforma Simples</title>
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { background: #87CEEB; overflow: hidden; }
    canvas { display: block; background: #6B8E23; margin: auto; border: 4px solid #333; }
  </style>
</head>
<body>
  <canvas id="gameCanvas" width="800" height="400"></canvas>
  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");const player = {
  x: 50,
  y: 300,
  width: 40,
  height: 40,
  vx: 0,
  vy: 0,
  speed: 3,
  jumpPower: 10,
  onGround: false,
  lives: 3,
  score: 0
};

const gravity = 0.5;
const friction = 0.9;

const keys = {};
const platforms = [
  { x: 0, y: 350, width: 800, height: 50 },
  { x: 200, y: 280, width: 100, height: 10 },
  { x: 400, y: 220, width: 100, height: 10 },
  { x: 600, y: 150, width: 100, height: 10 }
];

const coins = [
  { x: 210, y: 240, width: 20, height: 20, collected: false },
  { x: 410, y: 180, width: 20, height: 20, collected: false },
  { x: 610, y: 110, width: 20, height: 20, collected: false }
];

function drawPlayer() {
  ctx.fillStyle = "#FF4500";
  ctx.fillRect(player.x, player.y, player.width, player.height);
}

function drawPlatforms() {
  ctx.fillStyle = "#654321";
  platforms.forEach(p => {
    ctx.fillRect(p.x, p.y, p.width, p.height);
  });
}

function drawCoins() {
  ctx.fillStyle = "#FFD700";
  coins.forEach(c => {
    if (!c.collected) ctx.fillRect(c.x, c.y, c.width, c.height);
  });
}

function applyPhysics() {
  player.vy += gravity;
  player.x += player.vx;
  player.y += player.vy;

  player.onGround = false;
  platforms.forEach(p => {
    if (
      player.x < p.x + p.width &&
      player.x + player.width > p.x &&
      player.y + player.height > p.y &&
      player.y + player.height < p.y + p.height
    ) {
      player.y = p.y - player.height;
      player.vy = 0;
      player.onGround = true;
    }
  });

  coins.forEach(c => {
    if (!c.collected &&
      player.x < c.x + c.width &&
      player.x + player.width > c.x &&
      player.y < c.y + c.height &&
      player.y + player.height > c.y
    ) {
      c.collected = true;
      player.score += 10;
    }
  });

  if (player.y > canvas.height) {
    player.lives--;
    if (player.lives <= 0) {
      alert("Game Over! Pontuação: " + player.score);
      location.reload();
    } else {
      player.x = 50;
      player.y = 300;
      player.vy = 0;
    }
  }
}

function handleInput() {
  if (keys["ArrowLeft"] || keys["a"]) player.vx = -player.speed;
  else if (keys["ArrowRight"] || keys["d"]) player.vx = player.speed;
  else player.vx = 0;

  if ((keys["ArrowUp"] || keys["w"] || keys[" "]) && player.onGround) {
    player.vy = -player.jumpPower;
    player.onGround = false;
  }
}

function drawHUD() {
  ctx.fillStyle = "#000";
  ctx.font = "20px Arial";
  ctx.fillText("Vidas: " + player.lives, 10, 30);
  ctx.fillText("Pontuação: " + player.score, 10, 60);
}

function gameLoop() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  handleInput();
  applyPhysics();
  drawPlatforms();
  drawCoins();
  drawPlayer();
  drawHUD();
  requestAnimationFrame(gameLoop);
}

window.addEventListener("keydown", e => keys[e.key] = true);
window.addEventListener("keyup", e => keys[e.key] = false);

gameLoop();

  </script>
</body>
</html>